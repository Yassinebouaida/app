version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: khabeer-postgres
    environment:
      POSTGRES_DB: khabeer_al_hay
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend-api/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - khabeer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for Caching and Sessions
  redis:
    image: redis:7-alpine
    container_name: khabeer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - khabeer-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend-api
      dockerfile: Dockerfile
    container_name: khabeer-backend
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/khabeer_al_hay?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - NODE_ENV=development
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend-api:/app
      - /app/node_modules
    networks:
      - khabeer-network
    command: npm run start:dev
    restart: unless-stopped

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: khabeer-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - khabeer-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  khabeer-network:
    driver: bridge