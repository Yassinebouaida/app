version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: khabeer_postgres
    environment:
      POSTGRES_DB: khabeer_al_hay
      POSTGRES_USER: khabeer_user
      POSTGRES_PASSWORD: khabeer_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend-api/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - khabeer_network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: khabeer_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - khabeer_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend-api
      dockerfile: Dockerfile
    container_name: khabeer_backend
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://khabeer_user:khabeer_password@postgres:5432/khabeer_al_hay
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
    ports:
      - "3000:3000"
    volumes:
      - ./backend-api:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - khabeer_network
    restart: unless-stopped
    command: npm run start:dev

  # Mobile App (Flutter Web)
  mobile-web:
    build:
      context: ./mobile-app
      dockerfile: Dockerfile
    container_name: khabeer_mobile_web
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - khabeer_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: khabeer_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - mobile-web
    networks:
      - khabeer_network
    restart: unless-stopped

  # Admin Dashboard (Optional - React/Vue admin panel)
  admin-dashboard:
    build:
      context: ./admin-dashboard
      dockerfile: Dockerfile
    container_name: khabeer_admin_dashboard
    ports:
      - "3001:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3000/graphql
    depends_on:
      - backend
    networks:
      - khabeer_network
    restart: unless-stopped

  # Monitoring and Logging
  prometheus:
    image: prom/prometheus:latest
    container_name: khabeer_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - khabeer_network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: khabeer_grafana
    ports:
      - "3002:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - khabeer_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  grafana_data:
    driver: local

networks:
  khabeer_network:
    driver: bridge